using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using SMStudent.Database;

namespace SMStudent.Website.Student.Controllers
{
    public class StudentTablesController : Controller
    {
        private SMStudentContext db = new SMStudentContext();

        // GET: StudentTables
        public ActionResult Index()
        {
            var studentid = 0;
            //var userTypeId = 0;
            //int.TryParse(Convert.ToString(Session["SID"]), out studentid);
            //int.TryParse(Convert.ToString(Session["UserType_ID"]), out userTypeId);
            var username = Convert.ToString(Session["sUsername"]);
            var password = Convert.ToString(Session["SPassword"]);

            var findUser = db.StudentTables.Where(user => user.Username == username && user.Password == password && user.ID == studentid).FirstOrDefault();

            if (findUser == null)
            {
                return RedirectToAction("Login", "Auth");
            }

            var studentTables = db.StudentTables.Include(s => s.ClassTable).Include(s => s.DivisionTable).Include(s => s.FatherProfesion).Include(s => s.GenderTable).Include(s => s.Kota).Include(s => s.Nationality).Include(s => s.PostOffice).Include(s => s.ReligiousTable).Include(s => s.SessionTable).Include(s => s.UserTable);
            return View(studentTables.ToList());
        }

        // GET: StudentTables/Details/5
        public ActionResult Details(int? id)
        {
            var studentid = id;
            //var userTypeId = 0;
            //int.TryParse(Convert.ToString(Session["SID"]), out studentid);
            //int.TryParse(Convert.ToString(Session["UserType_ID"]), out userTypeId);
            var username = Convert.ToString(Session["sUsername"]);
            var password = Convert.ToString(Session["SPassword"]);

            var findUser = db.StudentTables.Where(user => user.Username == username && user.Password == password && user.ID == studentid).FirstOrDefault();

            if (findUser == null)
            {
                return RedirectToAction("Login", "Auth");
            }
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            StudentTable studentTable = db.StudentTables.Find(id);
            if (studentTable == null)
            {
                return HttpNotFound();
            }
            return View(studentTable);
        }

        // GET: StudentTables/Create
        public ActionResult Create()
        {
            var studentid = 0;
            //var userTypeId = 0;
            //int.TryParse(Convert.ToString(Session["SID"]), out studentid);
            //int.TryParse(Convert.ToString(Session["UserType_ID"]), out userTypeId);
            var username = Convert.ToString(Session["sUsername"]);
            var password = Convert.ToString(Session["SPassword"]);

            var findUser = db.StudentTables.Where(user => user.Username == username && user.Password == password && user.ID == studentid).FirstOrDefault();

            if (findUser == null)
            {
                return RedirectToAction("Login", "Auth");
            }

            ViewBag.Class_ID = new SelectList(db.ClassTables, "ID", "Name");
            ViewBag.Division_ID = new SelectList(db.DivisionTables, "ID", "Name");
            ViewBag.FatherProffesion_ID = new SelectList(db.FatherProfesions, "ID", "Name");
            ViewBag.Gender_ID = new SelectList(db.GenderTables, "ID", "Name");
            ViewBag.Kota_ID = new SelectList(db.Kotas, "ID", "Name");
            ViewBag.Nationality_ID = new SelectList(db.Nationalities, "ID", "Name");
            ViewBag.PostOffice_ID = new SelectList(db.PostOffices, "ID", "Name");
            ViewBag.Religious_ID = new SelectList(db.ReligiousTables, "ID", "Name");
            ViewBag.Session_ID = new SelectList(db.SessionTables, "ID", "Name");
            ViewBag.User_ID = new SelectList(db.UserTables, "ID", "FullName");
            return View();
        }

        // POST: StudentTables/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "ID,Session_ID,Division_ID,Class_ID,User_ID,Kota_ID,Gender_ID,Nationality_ID,FatherProffesion_ID,Religious_ID,PostOffice_ID,IsActive,Name,RollNumber,FatherName,MotherName,DateOfBirth,ContactNo,AdmissionDate,CNIC,FNIC,Photo,VaccinationCard_Photo,Birth_Certificate_Photo,Previous_School_Marksheet_Photo,Previous_School_Certificate_Photo,Previous_CGPA,Previous_School_Name,EmailAddress,Address,FatherPostalAddress,FatherPhone,FatherEmailAddress,EditDate")] StudentTable studentTable)
        {
            var studentid = 0;
            //var userTypeId = 0;
            //int.TryParse(Convert.ToString(Session["SID"]), out studentid);
            //int.TryParse(Convert.ToString(Session["UserType_ID"]), out userTypeId);
            var username = Convert.ToString(Session["sUsername"]);
            var password = Convert.ToString(Session["SPassword"]);

            var findUser = db.StudentTables.Where(user => user.Username == username && user.Password == password && user.ID == studentid).FirstOrDefault();

            if (findUser == null)
            {
                return RedirectToAction("Login", "Auth");
            }
            if (ModelState.IsValid)
            {
                db.StudentTables.Add(studentTable);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            ViewBag.Class_ID = new SelectList(db.ClassTables, "ID", "Name", studentTable.Class_ID);
            ViewBag.Division_ID = new SelectList(db.DivisionTables, "ID", "Name", studentTable.Division_ID);
            ViewBag.FatherProffesion_ID = new SelectList(db.FatherProfesions, "ID", "Name", studentTable.FatherProffesion_ID);
            ViewBag.Gender_ID = new SelectList(db.GenderTables, "ID", "Name", studentTable.Gender_ID);
            ViewBag.Kota_ID = new SelectList(db.Kotas, "ID", "Name", studentTable.Kota_ID);
            ViewBag.Nationality_ID = new SelectList(db.Nationalities, "ID", "Name", studentTable.Nationality_ID);
            ViewBag.PostOffice_ID = new SelectList(db.PostOffices, "ID", "Name", studentTable.PostOffice_ID);
            ViewBag.Religious_ID = new SelectList(db.ReligiousTables, "ID", "Name", studentTable.Religious_ID);
            ViewBag.Session_ID = new SelectList(db.SessionTables, "ID", "Name", studentTable.Session_ID);
            ViewBag.User_ID = new SelectList(db.UserTables, "ID", "FullName", studentTable.User_ID);
            return View(studentTable);
        }

        // GET: StudentTables/Edit/5
        public ActionResult Edit(int? id)
        {
            var studentid = id;
            //var userTypeId = 0;
            //int.TryParse(Convert.ToString(Session["SID"]), out studentid);
            //int.TryParse(Convert.ToString(Session["UserType_ID"]), out userTypeId);
            var username = Convert.ToString(Session["sUsername"]);
            var password = Convert.ToString(Session["SPassword"]);

            var findUser = db.StudentTables.Where(user => user.Username == username && user.Password == password && user.ID == studentid).FirstOrDefault();

            if (findUser == null)
            {
                return RedirectToAction("Login", "Auth");
            }
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            StudentTable studentTable = db.StudentTables.Find(id);
            if (studentTable == null)
            {
                return HttpNotFound();
            }
            ViewBag.Class_ID = new SelectList(db.ClassTables, "ID", "Name", studentTable.Class_ID);
            ViewBag.Division_ID = new SelectList(db.DivisionTables, "ID", "Name", studentTable.Division_ID);
            ViewBag.FatherProffesion_ID = new SelectList(db.FatherProfesions, "ID", "Name", studentTable.FatherProffesion_ID);
            ViewBag.Gender_ID = new SelectList(db.GenderTables, "ID", "Name", studentTable.Gender_ID);
            ViewBag.Kota_ID = new SelectList(db.Kotas, "ID", "Name", studentTable.Kota_ID);
            ViewBag.Nationality_ID = new SelectList(db.Nationalities, "ID", "Name", studentTable.Nationality_ID);
            ViewBag.PostOffice_ID = new SelectList(db.PostOffices, "ID", "Name", studentTable.PostOffice_ID);
            ViewBag.Religious_ID = new SelectList(db.ReligiousTables, "ID", "Name", studentTable.Religious_ID);
            ViewBag.Session_ID = new SelectList(db.SessionTables, "ID", "Name", studentTable.Session_ID);
            ViewBag.User_ID = new SelectList(db.UserTables, "ID", "FullName", studentTable.User_ID);
            return View(studentTable);
        }

        // POST: StudentTables/Edit/5
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include = "ID,Session_ID,Division_ID,Class_ID,User_ID,Kota_ID,Gender_ID,Nationality_ID,FatherProffesion_ID,Religious_ID,PostOffice_ID,IsActive,Name,RollNumber,FatherName,MotherName,DateOfBirth,ContactNo,AdmissionDate,CNIC,FNIC,Photo,VaccinationCard_Photo,Birth_Certificate_Photo,Previous_School_Marksheet_Photo,Previous_School_Certificate_Photo,Previous_CGPA,Previous_School_Name,EmailAddress,Address,FatherPostalAddress,FatherPhone,FatherEmailAddress,EditDate")] StudentTable studentTable)
        {
            var studentid = 0;
            //var userTypeId = 0;
            //int.TryParse(Convert.ToString(Session["SID"]), out studentid);
            //int.TryParse(Convert.ToString(Session["UserType_ID"]), out userTypeId);
            var username = Convert.ToString(Session["sUsername"]);
            var password = Convert.ToString(Session["SPassword"]);

            var findUser = db.StudentTables.Where(user => user.Username == username && user.Password == password && user.ID == studentid).FirstOrDefault();

            if (findUser == null)
            {
                return RedirectToAction("Login", "Auth");
            }
            if (ModelState.IsValid)
            {
                db.Entry(studentTable).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            ViewBag.Class_ID = new SelectList(db.ClassTables, "ID", "Name", studentTable.Class_ID);
            ViewBag.Division_ID = new SelectList(db.DivisionTables, "ID", "Name", studentTable.Division_ID);
            ViewBag.FatherProffesion_ID = new SelectList(db.FatherProfesions, "ID", "Name", studentTable.FatherProffesion_ID);
            ViewBag.Gender_ID = new SelectList(db.GenderTables, "ID", "Name", studentTable.Gender_ID);
            ViewBag.Kota_ID = new SelectList(db.Kotas, "ID", "Name", studentTable.Kota_ID);
            ViewBag.Nationality_ID = new SelectList(db.Nationalities, "ID", "Name", studentTable.Nationality_ID);
            ViewBag.PostOffice_ID = new SelectList(db.PostOffices, "ID", "Name", studentTable.PostOffice_ID);
            ViewBag.Religious_ID = new SelectList(db.ReligiousTables, "ID", "Name", studentTable.Religious_ID);
            ViewBag.Session_ID = new SelectList(db.SessionTables, "ID", "Name", studentTable.Session_ID);
            ViewBag.User_ID = new SelectList(db.UserTables, "ID", "FullName", studentTable.User_ID);
            return View(studentTable);
        }

        // GET: StudentTables/Delete/5
        public ActionResult Delete(int? id)
        {
            var studentid = id;
            //var userTypeId = 0;
            //int.TryParse(Convert.ToString(Session["SID"]), out studentid);
            //int.TryParse(Convert.ToString(Session["UserType_ID"]), out userTypeId);
            var username = Convert.ToString(Session["sUsername"]);
            var password = Convert.ToString(Session["SPassword"]);

            var findUser = db.StudentTables.Where(user => user.Username == username && user.Password == password && user.ID == studentid).FirstOrDefault();

            if (findUser == null)
            {
                return RedirectToAction("Login", "Auth");
            }
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            StudentTable studentTable = db.StudentTables.Find(id);
            if (studentTable == null)
            {
                return HttpNotFound();
            }
            return View(studentTable);
        }

        // POST: StudentTables/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            var studentid = id;
            //var userTypeId = 0;
            //int.TryParse(Convert.ToString(Session["SID"]), out studentid);
            //int.TryParse(Convert.ToString(Session["UserType_ID"]), out userTypeId);
            var username = Convert.ToString(Session["sUsername"]);
            var password = Convert.ToString(Session["SPassword"]);

            var findUser = db.StudentTables.Where(user => user.Username == username && user.Password == password && user.ID == studentid).FirstOrDefault();

            if (findUser == null)
            {
                return RedirectToAction("Login", "Auth");
            }
            StudentTable studentTable = db.StudentTables.Find(id);
            db.StudentTables.Remove(studentTable);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}



<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Required meta tags-->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="au theme template">
    <meta name="author" content="Hau Nguyen">
    <meta name="keywords" content="au theme template">

    <!-- Title Page-->
    <title>Dashboard 2</title>

    <!-- Fontfaces CSS-->
    <link href="~/Content/Admin/css/font-face.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/font-awesome-4.7/css/font-awesome.min.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/font-awesome-5/css/fontawesome-all.min.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/mdi-font/css/material-design-iconic-font.min.css" rel="stylesheet" media="all">

    <!-- Bootstrap CSS-->
    <link href="~/Content/Admin/vendor/bootstrap-4.1/bootstrap.min.css" rel="stylesheet" media="all">

    <!-- Vendor CSS-->
    <link href="~/Content/Admin/vendor/animsition/animsition.min.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/bootstrap-progressbar/bootstrap-progressbar-3.3.4.min.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/wow/animate.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/css-hamburgers/hamburgers.min.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/slick/slick.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/select2/select2.min.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/perfect-scrollbar/perfect-scrollbar.css" rel="stylesheet" media="all">
    <link href="~/Content/Admin/vendor/vector-map/jqvmap.min.css" rel="stylesheet" media="all">

    <!-- Main CSS-->
    <link href="~/Content/Admin/css/theme.css" rel="stylesheet" media="all">

</head>

<body class="animsition">
    <div class="page-wrapper">
        <!-- MENU SIDEBAR-->
        <aside class="menu-sidebar2">
            <div class="logo">
                <a href="#">
                    <img src="~/Content/Admin/images/icon/logo-white.png" alt="Cool Admin" />
                </a>
            </div>
            <div class="menu-sidebar2__content js-scrollbar1">
                <div class="account2">
                    <div class="image img-cir img-120">
                        <img src="~/Content/Admin/images/icon/avatar-big-01.jpg" alt="John Doe" />
                    </div>
                    <h4 class="name">john doe</h4>
                    <a href="@Url.Action("LogOut","Auth")">Sign out</a>
                </div>
                <nav class="navbar-sidebar2">
                    <ul class="list-unstyled navbar__list">
                        <li class="active has-sub">
                            <a class="js-arrow" href="#">
                                <i class="fas fa-tachometer-alt"></i>Configuration
                                <span class="arrow">
                                    <i class="fas fa-angle-down"></i>
                                </span>
                            </a>
                            <ul class="list-unstyled navbar__sub-list js-sub-list">
                                <li>
                                    <a href="@Url.Action("Index","GenderTables")">
                                        <i class="fas fa-tachometer-alt"></i>Gender
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","FatherProfesions")">
                                        <i class="fas fa-tachometer-alt"></i>Proffessions
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","Kotas")">
                                        <i class="fas fa-tachometer-alt"></i>Kota
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","Nationalities")">
                                        <i class="fas fa-tachometer-alt"></i>Nationality
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","PostOffices")">
                                        <i class="fas fa-tachometer-alt"></i>Post Office
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","ReligiousTables")">
                                        <i class="fas fa-tachometer-alt"></i>Religious
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","ClassTables")">
                                        <i class="fas fa-tachometer-alt"></i>Class
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","DivisionTables")">
                                        <i class="fas fa-tachometer-alt"></i>Groups
                                    </a>
                                </li>
                            </ul>
                        </li>

                        <li class="has-sub">
                            <a class="js-arrow" href="@Url.Action("Index","ClassRoutinelTables")">
                                <i class="fas fa-tachometer-alt"></i>Class Routine
                                <span class="arrow">
                                    <i class="fas fa-angle-down"></i>
                                </span>
                            </a>
                        </li>
                        <li class="has-sub">
                            <a class="js-arrow" href="#">
                                <i class="fas fa-tachometer-alt"></i>Notification's
                                <span class="arrow">
                                    <i class="fas fa-angle-down"></i>
                                </span>
                            </a>
                            <ul class="list-unstyled navbar__sub-list js-sub-list">
                                <li>
                                    <a href="@Url.Action("Index","meetingFixableTables")">
                                        <i class="fas fa-tachometer-alt"></i>Meeting Add
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","notificationTables")">
                                        <i class="fas fa-tachometer-alt"></i>Notice Add
                                    </a>
                                </li>
                            </ul>
                        </li>

                        <li class="has-sub">
                            <a class="js-arrow" href="#">
                                <i class="fas fa-tachometer-alt"></i>Student's Fee
                                <span class="arrow">
                                    <i class="fas fa-angle-down"></i>
                                </span>
                            </a>
                            <ul class="list-unstyled navbar__sub-list js-sub-list">
                                <li>
                                    <a href="@Url.Action("Index","ExamFeelTables")">
                                        <i class="fas fa-tachometer-alt"></i>Exam Fee
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","StudentAnnualFeeTables")">
                                        <i class="fas fa-tachometer-alt"></i>Annual Fee
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","StudyTourFeelTables")">
                                        <i class="fas fa-tachometer-alt"></i>Tour Fee
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","TransportationFeelTables")">
                                        <i class="fas fa-tachometer-alt"></i>Transportation Fee
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index","TuisionFeeTables")">
                                        <i class="fas fa-tachometer-alt"></i>Tuision Fee
                                    </a>
                                </li>

                            </ul>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>
        <!-- END MENU SIDEBAR-->
        <!-- PAGE CONTAINER-->
        <div class="page-container2">
            <!-- HEADER DESKTOP-->
            <header class="header-desktop2">
                <div class="section__content section__content--p30">
                    <div class="container-fluid">
                        <div class="header-wrap2">
                            <div class="logo d-block d-lg-none">
                                <a href="#">
                                    <img src="~/Content/Admin/images/icon/logo-white.png" alt="CoolAdmin" />
                                </a>
                            </div>
                            <div class="header-button2">
                                <div class="header-button-item js-item-menu">
                                    <i class="zmdi zmdi-search"></i>
                                    <div class="search-dropdown js-dropdown">
                                        <form action="">
                                            <input class="au-input au-input--full au-input--h65" type="text" placeholder="Search for datas &amp; reports..." />
                                            <span class="search-dropdown__icon">
                                                <i class="zmdi zmdi-search"></i>
                                            </span>
                                        </form>
                                    </div>
                                </div>
                                <div class="header-button-item has-noti js-item-menu">
                                    <i class="zmdi zmdi-notifications"></i>
                                    <div class="notifi-dropdown js-dropdown">
                                        <div class="notifi__title">
                                            <p>You have 3 Notifications</p>
                                        </div>
                                        <div class="notifi__item">
                                            <div class="bg-c1 img-cir img-40">
                                                <i class="zmdi zmdi-email-open"></i>
                                            </div>
                                            <div class="content">
                                                <p>You got a email notification</p>
                                                <span class="date">April 12, 2018 06:50</span>
                                            </div>
                                        </div>
                                        <div class="notifi__item">
                                            <div class="bg-c2 img-cir img-40">
                                                <i class="zmdi zmdi-account-box"></i>
                                            </div>
                                            <div class="content">
                                                <p>Your account has been blocked</p>
                                                <span class="date">April 12, 2018 06:50</span>
                                            </div>
                                        </div>
                                        <div class="notifi__item">
                                            <div class="bg-c3 img-cir img-40">
                                                <i class="zmdi zmdi-file-text"></i>
                                            </div>
                                            <div class="content">
                                                <p>You got a new file</p>
                                                <span class="date">April 12, 2018 06:50</span>
                                            </div>
                                        </div>
                                        <div class="notifi__footer">
                                            <a href="#">All notifications</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="header-button-item mr-0 js-sidebar-btn">
                                    <i class="zmdi zmdi-menu"></i>
                                </div>
                                <div class="setting-menu js-right-sidebar d-none d-lg-block">
                                    <div class="account-dropdown__body">
                                        <div class="account-dropdown__item">
                                            <a href="#">
                                                <i class="zmdi zmdi-account"></i>Account
                                            </a>
                                        </div>
                                        <div class="account-dropdown__item">
                                            <a href="#">
                                                <i class="zmdi zmdi-settings"></i>Setting
                                            </a>
                                        </div>
                                        <div class="account-dropdown__item">
                                            <a href="#">
                                                <i class="zmdi zmdi-money-box"></i>Billing
                                            </a>
                                        </div>
                                    </div>
                                    <div class="account-dropdown__body">
                                        <div class="account-dropdown__item">
                                            <a href="#">
                                                <i class="zmdi zmdi-globe"></i>Language
                                            </a>
                                        </div>
                                        <div class="account-dropdown__item">
                                            <a href="#">
                                                <i class="zmdi zmdi-pin"></i>Location
                                            </a>
                                        </div>
                                        <div class="account-dropdown__item">
                                            <a href="#">
                                                <i class="zmdi zmdi-email"></i>Email
                                            </a>
                                        </div>
                                        <div class="account-dropdown__item">
                                            <a href="#">
                                                <i class="zmdi zmdi-notifications"></i>Notifications
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </header>
            <aside class="menu-sidebar2 js-right-sidebar d-block d-lg-none">
                <div class="logo">
                    <a href="#">
                        <img src="~/Content/Admin/images/icon/logo-white.png" alt="Cool Admin" />
                    </a>
                </div>
                <div class="menu-sidebar2__content js-scrollbar2">
                    <div class="account2">
                        <div class="image img-cir img-120">
                            <img src="~/Content/Admin/images/icon/avatar-big-01.jpg" alt="John Doe" />
                        </div>
                        <h4 class="name">john doe</h4>
                        <a href="@Url.Action("LogOut","Auth")">Sign out</a>
                    </div>
                    <nav class="navbar-sidebar2">
                        <ul class="list-unstyled navbar__list">
                            <li class="active has-sub">
                                <a class="js-arrow" href="#">
                                    <i class="fas fa-tachometer-alt"></i>Dashboard
                                    <span class="arrow">
                                        <i class="fas fa-angle-down"></i>
                                    </span>
                                </a>
                                <ul class="list-unstyled navbar__sub-list js-sub-list">
                                    <li>
                                        <a href="index.html">
                                            <i class="fas fa-tachometer-alt"></i>Dashboard 1
                                        </a>
                                    </li>
                                    <li>
                                        <a href="index2.html">
                                            <i class="fas fa-tachometer-alt"></i>Dashboard 2
                                        </a>
                                    </li>
                                    <li>
                                        <a href="index3.html">
                                            <i class="fas fa-tachometer-alt"></i>Dashboard 3
                                        </a>
                                    </li>
                                    <li>
                                        <a href="index4.html">
                                            <i class="fas fa-tachometer-alt"></i>Dashboard 4
                                        </a>
                                    </li>
                                </ul>
                            </li>

                        </ul>
                    </nav>
                </div>
            </aside>
           @RenderBody()
            <section>
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="copyright">
                                <p>Copyright © 2018 Colorlib. All rights reserved. Template by <a href="https://colorlib.com">Colorlib</a>.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <!-- END PAGE CONTAINER-->
        </div>

    </div>

    <!-- Jquery JS-->
    <script src="~/Content/Admin/vendor/jquery-3.2.1.min.js"></script>
    <!-- Bootstrap JS-->
    <script src="~/Content/Admin/vendor/bootstrap-4.1/popper.min.js"></script>
    <script src="~/Content/Admin/vendor/bootstrap-4.1/bootstrap.min.js"></script>
    <!-- Vendor JS       -->
    <script src="~/Content/Admin/vendor/slick/slick.min.js"></script>
    <script src="~/Content/Admin/vendor/wow/wow.min.js"></script>
    <script src="~/Content/Admin/vendor/animsition/animsition.min.js"></script>
    <script src="~/Content/Admin/vendor/bootstrap-progressbar/bootstrap-progressbar.min.js"></script>
    <script src="~/Content/Admin/vendor/counter-up/jquery.waypoints.min.js"></script>
    <script src="~/Content/Admin/vendor/counter-up/jquery.counterup.min.js"></script>
    <script src="~/Content/Admin/vendor/circle-progress/circle-progress.min.js"></script>
    <script src="~/Content/Admin/vendor/perfect-scrollbar/perfect-scrollbar.js"></script>
    <script src="~/Content/Admin/vendor/chartjs/Chart.bundle.min.js"></script>
    <script src="~/Content/Admin/vendor/select2/select2.min.js"></script>
    <script src="~/Content/Admin/vendor/vector-map/jquery.vmap.js"></script>
    <script src="~/Content/Admin/vendor/vector-map/jquery.vmap.min.js"></script>
    <script src="~/Content/Admin/vendor/vector-map/jquery.vmap.sampledata.js"></script>
    <script src="~/Content/Admin/vendor/vector-map/jquery.vmap.world.js"></script>

    <!-- Main JS-->
    <script src="~/Content/Admin/js/main.js"></script>
    @RenderSection("scripts", required: false)
</body>

</html>
<!-- end document-->


